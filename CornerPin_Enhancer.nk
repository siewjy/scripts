set cut_paste_input [stack 0]
version 13.2 v8
push $cut_paste_input
NoOp {
name CornerPin_Enhancer
selected true
xpos -222
ypos 2487
addUserKnob {20 User l "Set Reference Frame"}
addUserKnob {26 text l "" +STARTLINE T "Select a <b>CornerPin</b> node and hit the Button below to add function."}
addUserKnob {22 upgrade l "<b>Upgrade CornerPin" T "selected = nuke.selectedNode()\nthis = nuke.thisNode()\n\ndef upgrade_CornerPin():\n    \n    ref_Frame = nuke.PyScript_Knob(\"setRefFrame\", \"Set Reference Frame\", \"Text\")\n    selected.addKnob(ref_Frame)\n    selected.knob('setRefFrame').setValue(\"refFrame = nuke.thisNode()\\ncurrentFrame = nuke.frame()\\n\\n\\nnuke.animation(\\\"from1.x\\\",\\\"expression\\\",(\\\"to1.x\\\",))\\nnuke.animation(\\\"from2.x\\\",\\\"expression\\\",(\\\"to2.x\\\",))\\nnuke.animation(\\\"from3.x\\\",\\\"expression\\\",(\\\"to3.x\\\",))\\nnuke.animation(\\\"from4.x\\\",\\\"expression\\\",(\\\"to4.x\\\",))\\n\\n\\nnuke.animation(\\\"from1.y\\\",\\\"expression\\\",(\\\"to1.y\\\",))\\nnuke.animation(\\\"from2.y\\\",\\\"expression\\\",(\\\"to2.y\\\",))\\nnuke.animation(\\\"from3.y\\\",\\\"expression\\\",(\\\"to3.y\\\",))\\nnuke.animation(\\\"from4.y\\\",\\\"expression\\\",(\\\"to4.y\\\",))\\n\\n\\nrefFrame\['from1'].clearAnimated()\\nrefFrame\['from2'].clearAnimated()\\nrefFrame\['from3'].clearAnimated()\\nrefFrame\['from4'].clearAnimated()\\n\\nrefFrame.knob('r_frame').setValue(currentFrame)\\nrefFrame.knob('r_frame').setEnabled(False)\")\n    \n    frameNo = nuke.Int_Knob(\"r_frame\", \" Frame\", 0)\n    selected.addKnob(frameNo)\n    selected\['r_frame'].clearFlag(nuke.STARTLINE)\n    selected\['r_frame'].setEnabled(False)\n    \n    #Label \n    p_label = selected\['label'].value()\n    p_label_lines = p_label.split('\\n')\n    p_label_top = p_label_lines\[0]\n    selected\['label'].setValue(p_label_top+\"\\nRef Frame: \[value r_frame]\")\n    selected.knob('User').setLabel(\"Set Reference Frame\")\n    \n    #Adding a linked Invert Knob\n    add_invert = this\['invert_transfer'].value()\n    if add_invert == \"Yes\":\n    \n        divider = nuke.Text_Knob(\"\",\"\",\"\")\n        selected.addKnob(divider)\n        current_Invert = selected\['invert'].value()\n        invertNew = nuke.Boolean_Knob(\"n_invert\",\"Invert\", current_Invert)\n        selected.addKnob(invertNew)\n        selected\['invert'].setExpression(\"n_invert\")\n    \n    \n#Check if node is CornerPin\nn_name = selected.name()\nknobs = selected.knobs()\n\nif 'CornerPin2D' in n_name:\n    knobExist = False\n    for i in knobs:\n        if 'setRefFrame' in i:\n            knobExist = True\n            \n    if knobExist == False:\n        upgrade_CornerPin()\n        \n    elif knobExist == True:\n        nuke.message(\"Function is already available\")\n      \nelse:\n    nuke.message(\"Please select a CornerPin Node\")" +STARTLINE}
addUserKnob {26 _1 l "" +STARTLINE}
addUserKnob {20 group l "Advance Options" n 1}
group 0
addUserKnob {26 text_2 l "" +STARTLINE T "Include a linked Invert after upgrade"}
addUserKnob {4 invert_transfer l "" -STARTLINE M {No Yes "" "" "" ""}}
}
